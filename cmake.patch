--- VTK-6.3.0/CMake/vtkCompilerExtras.cmake.orig	2015-09-01 23:41:26.000000000 +0200
+++ VTK-6.3.0/CMake/vtkCompilerExtras.cmake	2017-01-22 14:50:17.608531103 +0100
@@ -27,25 +27,12 @@
       "${VTK_EXTRA_SHARED_LINKER_FLAGS} -Wl,--no-undefined -lc ${CMAKE_SHARED_LINKER_FLAGS}")
   endif()
 
-  # Now check if we can use visibility to selectively export symbols
-  execute_process(COMMAND ${CMAKE_C_COMPILER} ARGS --version
-    OUTPUT_VARIABLE _gcc_version_info
-    ERROR_VARIABLE _gcc_version_info)
-
-  string (REGEX MATCH "[345]\\.[0-9]\\.[0-9]*"
-    _gcc_version "${_gcc_version_info}")
-  if(NOT _gcc_version)
-    string (REGEX REPLACE ".*\\(GCC\\).*([34]\\.[0-9]).*" "\\1.0"
-      _gcc_version "${_gcc_version_info}")
-  endif()
-
   # GCC visibility support, on by default and in testing.
   check_cxx_compiler_flag(-fvisibility=hidden HAVE_GCC_VISIBILITY)
   option(VTK_USE_GCC_VISIBILITY "Use GCC visibility support if available." OFF)
   mark_as_advanced(VTK_USE_GCC_VISIBILITY)
 
-  if(${_gcc_version} VERSION_GREATER 4.2.0 AND BUILD_SHARED_LIBS
-    AND HAVE_GCC_VISIBILITY AND VTK_USE_GCC_VISIBILITY
+  if(BUILD_SHARED_LIBS AND HAVE_GCC_VISIBILITY AND VTK_USE_GCC_VISIBILITY
     AND NOT MINGW AND NOT CYGWIN)
     # Should only be set if GCC is newer than 4.2.0
     set(VTK_ABI_CXX_FLAGS "-fvisibility=hidden -fvisibility-inlines-hidden")
--- VTK-6.3.0/CMake/GenerateExportHeader.cmake~	2015-09-01 23:41:26.000000000 +0200
+++ VTK-6.3.0/CMake/GenerateExportHeader.cmake	2017-01-22 14:52:40.568759745 +0100
@@ -162,24 +162,6 @@
 
 macro(_test_compiler_hidden_visibility)
 
-  if(CMAKE_COMPILER_IS_GNUCXX)
-    execute_process(COMMAND ${CMAKE_C_COMPILER} ARGS --version
-      OUTPUT_VARIABLE _gcc_version_info
-      ERROR_VARIABLE _gcc_version_info)
-    string(REGEX MATCH "[345]\\.[0-9]\\.[0-9]*"
-      _gcc_version "${_gcc_version_info}")
-    # gcc on mac just reports: "gcc (GCC) 3.3 20030304 ..." without the
-    # patch level, handle this here:
-    if(NOT _gcc_version)
-      string(REGEX REPLACE ".*\\(GCC\\).*([34]\\.[0-9]).*" "\\1.0"
-        _gcc_version "${_gcc_version_info}")
-    endif()
-
-    if(${_gcc_version} VERSION_LESS "4.2")
-      set(GCC_TOO_OLD TRUE)
-    endif()
-  endif()
-
   if(CMAKE_CXX_COMPILER_ID MATCHES "Intel")
     execute_process(COMMAND ${CMAKE_CXX_COMPILER} ARGS -V
       OUTPUT_VARIABLE _intel_version_info

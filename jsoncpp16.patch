--- VTK-6.1.0/ThirdParty/jsoncpp/vtk_jsoncpp.h.in~	2014-01-22 16:55:41.000000000 +0100
+++ VTK-6.1.0/ThirdParty/jsoncpp/vtk_jsoncpp.h.in	2015-03-11 21:12:09.859743052 +0100
@@ -18,7 +18,7 @@
 /* Use the JsonCpp library configured for VTK.  */
 #cmakedefine VTK_USE_SYSTEM_JSONCPP
 #ifdef VTK_USE_SYSTEM_JSONCPP
-# include <json/json.h>
+# include <jsoncpp/json.h>
 # ifndef JSON_FORWARDS_H_INCLUDED
 #  error Incorrect header included, check your include paths for conflicts
 # endif
--- VTK-6.1.0/ThirdParty/jsoncpp/vtkjsoncpp/jsoncpp.cpp~	2014-01-22 16:55:41.000000000 +0100
+++ VTK-6.1.0/ThirdParty/jsoncpp/vtkjsoncpp/jsoncpp.cpp	2015-03-11 21:13:12.856409262 +0100
@@ -75,7 +75,7 @@
 
 
 
-#include "json/json.h"
+#include "jsoncpp/json.h"
 
 
 // //////////////////////////////////////////////////////////////////////
@@ -195,8 +195,8 @@
 // See file LICENSE for detail or copy at http://jsoncpp.sourceforge.net/LICENSE
 
 #if !defined(JSON_IS_AMALGAMATION)
-# include <json/reader.h>
-# include <json/value.h>
+# include <jsoncpp/reader.h>
+# include <jsoncpp/value.h>
 # include "json_tool.h"
 #endif // if !defined(JSON_IS_AMALGAMATION)
 #include <utility>
@@ -1546,8 +1546,8 @@
 // See file LICENSE for detail or copy at http://jsoncpp.sourceforge.net/LICENSE
 
 #if !defined(JSON_IS_AMALGAMATION)
-# include <json/value.h>
-# include <json/writer.h>
+# include <jsoncpp/value.h>
+# include <jsoncpp/writer.h>
 # ifndef JSON_USE_SIMPLE_INTERNAL_ALLOCATOR
 #  include "json_batchallocator.h"
 # endif // #ifndef JSON_USE_SIMPLE_INTERNAL_ALLOCATOR
@@ -3398,7 +3398,7 @@
 // See file LICENSE for detail or copy at http://jsoncpp.sourceforge.net/LICENSE
 
 #if !defined(JSON_IS_AMALGAMATION)
-# include <json/writer.h>
+# include <jsoncpp/writer.h>
 # include "json_tool.h"
 #endif // if !defined(JSON_IS_AMALGAMATION)
 #include <utility>
--- VTK-6.1.0/CMake/FindJsonCpp.cmake.orig	2014-01-22 16:55:41.000000000 +0100
+++ VTK-6.1.0/CMake/FindJsonCpp.cmake	2015-03-11 21:15:27.929741618 +0100
@@ -8,8 +8,7 @@
 # JsonCpp_LIBRARIES - the libraries to link against to use JsonCpp
 # JsonCpp_FOUND - if false the library was not found.
 
-find_path(JsonCpp_INCLUDE_DIR "json/json.h"
-  PATH_SUFFIXES "jsoncpp"
+find_path(JsonCpp_INCLUDE_DIR "jsoncpp/json.h"
   DOC "Specify the JsonCpp include directory here")
 
 find_library(JsonCpp_LIBRARY
